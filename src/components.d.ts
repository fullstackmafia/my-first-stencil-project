/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import { CollapsiblePanel as CollapsiblePanel } from './components/first-component';

interface HTMLCollapsiblePanelElement extends CollapsiblePanel, HTMLElement {
}
declare var HTMLCollapsiblePanelElement: {
  prototype: HTMLCollapsiblePanelElement;
  new (): HTMLCollapsiblePanelElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "collapsible-panel": HTMLCollapsiblePanelElement;
  }
  interface ElementTagNameMap {
      "collapsible-panel": HTMLCollapsiblePanelElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "collapsible-panel": JSXElements.CollapsiblePanelAttributes;
      }
  }
  namespace JSXElements {
      export interface CollapsiblePanelAttributes extends HTMLAttributes {
        
          title?: any
      }
  }
}

import { MyName as MyName } from './components/my-name/my-name';

interface HTMLMyNameElement extends MyName, HTMLElement {
}
declare var HTMLMyNameElement: {
  prototype: HTMLMyNameElement;
  new (): HTMLMyNameElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "my-name": HTMLMyNameElement;
  }
  interface ElementTagNameMap {
      "my-name": HTMLMyNameElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "my-name": JSXElements.MyNameAttributes;
      }
  }
  namespace JSXElements {
      export interface MyNameAttributes extends HTMLAttributes {
        
          first?: any,
          last?: any
      }
  }
}

